;;;;;          CYRUS CURSETJEE          ;;;;;
;;;;; Honors Algebra II / Trigonometry  ;;;;;
;;;;;             Mr. Sterr             ;;;;;
;;;;;         December 4, 2019          ;;;;;



;Returns the mandelbrot function where "minA" increases by 0.02 [-2,1] (Problem 3)
(define (prob3 minA maxA b)
  ;This part is for organization
  (display (r100th minA))
  (display ": ")
  (display (simplemandel minA b))
  (display "\n")
  ;This returns each maximum n as a"" increases by 0.02 and stops once it reaches the maximum value of "a"
  (if (< minA maxA)
      (prob3 (+ minA .02) maxA b)
      (display "Mr. Sterr please accept my apples :(")
      )
  )
                       
;Facilitates the calling of function mandelbrot
(define (simplemandel a b) (mandelbrot 1 a b a b))

;Returns the largest natural number "n" such that the modulus of mandelbrot(n) is less than 2
(define (mandelbrot n a b initialA initialB)
  ;Only use display-iteration for problem 1, DO NOT USE FOR PROBLEM 3.
  ;(display-iteration n a b)
  (if (< n 25)
      (if (<= (modulus a b) 2)
          (mandelbrot (+ n 1) (newA a b initialA) (newB a b initialB) initialA initialB)
    n
    )
      ;Because we don't want our computers to crash, it is assumed that once n reaches 25, a+bi is part of the mandelbrot set
      25
      )
  )

;After running through the mandelbrot function, this allows us to define the new value for the real part, while still storing the initial real part in a different variable.
(define (newA a b initialA)
  (+ (expt a 2) initialA (* -1 (expt b 2)))
  )

;Similarly to the newA function, this allows us to define the new value of the imaginary part
(define (newB a b initialB)
  (+ (* 2 a b) initialB)
  )

;Returns the modulus, or distance from zero of a given imaginary number
(define (modulus a b)
  (sqrt (+ (expt a 2) (expt b 2)
                            )
                      )
)

;Function for rounding to the nearest hundredth
(define (r100th x)
  (/ (round (* x 100)) 100)
  )

;Function to display the number and modulus of each iteration (Problem 1)
(define (display-iteration n a b)
  (display n)
  (display ": Number= ")
  (display (+ (r100th a) (* (r100th b) (sqrt -1))))
  (display "  Modulus= ")
  (display (r100th (modulus a b)))
  (display "\n")
)


;To test results, delete ";" and run.

;The first three commands are for Problem 1
;Activate display-iteration function under mandelbrot to view each iteration
;Note that to do 60 iterations instead of 25, you must edit the mandelbrot function

;The rest of the commands are for Problem 3
;When running these commands, I would
;*** S T R O N G L Y   R E C O M M E N D ***
;commenting out display-iteration for your computer's well-being :)


;(simplemandel -.7 .15)
;(simplemandel .5 .5)
;(simplemandel -1.0404 0.2509)
;(prob3 -2 1 .38)
;(prob3 -2 1 .36)
;(prob3 -2 1 .34)
;(prob3 -2 1 .32)
;(prob3 -2 1 .3)
;(prob3 -2 1 .28)

